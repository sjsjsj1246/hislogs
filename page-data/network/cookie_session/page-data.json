{"componentChunkName":"component---src-templates-blog-template-js","path":"/network/cookie_session/","result":{"data":{"cur":{"id":"a46980fc-f27b-50db-b0b7-db61fbd38346","html":"<h1 id=\"쿠키와-세션-세션\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4%EC%99%80-%EC%84%B8%EC%85%98-%EC%84%B8%EC%85%98\" aria-label=\"쿠키와 세션 세션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키와 세션.. (세션?)</h1>\n<p>상태: Not started\n생성일: 2023년 4월 19일 오전 11:25</p>\n<p>쿠키와 세션 자주 들었는데 이번 기회로 명확히 알아봅시다.</p>\n<p>먼저 이 기술이 등장한 배경을 이해해야 합니다.</p>\n<p>HTTP 프로토콜은 stateless(무상태), connectionless(비연결지향) 특성을 가지고 있기 떄문에 클라이언트의 요청에 대해 어떤 클라이언트인지 식별할 수 없습니다.</p>\n<blockquote>\n<p>Stateless: 커넥션이 종료되는 순간 상태정보를 유지하지 않는 특성</p>\n</blockquote>\n<blockquote>\n<p>Connectionless: 클라이언트가 요청을 보내고 서버의 응답을 주면 연결을 끊는다.</p>\n</blockquote>\n<p>초기에는 클라이언트의 IP 주소를 이용하여 식별하려 했으나 몇개의 문제점이 존재했습니다.</p>\n<ul>\n<li>여러 사용자가 한 대의 컴퓨터를 사용한다면 하나의 IP로 어떤 사용자인지 식별할 수 없다.</li>\n<li>인터넷 서비스 제공자(ISP)는 사용자가 로그인하면 동적으로 IP 주소를 할당한다. 매번 다른 주소를 받으므로 식별할 수 없다.</li>\n<li>네트워크 주소 변환(Network Address Translation, NAT) 방화벽을 통해 인터넷을 사용할 경우, NAT 장비는 실제 IP 주소를 방화벽 뒤로 숨기고, 내부에서 사용하는 하나의 방화벽 IP 주소(다른 포트번호)로 변환한다.</li>\n<li>HTTP 프락시와 게이트웨이는 원 서버에 새로운 TCP 연결을 한다. 웹 서버는 클라이언트의 IP 대신 프락시 서버의 IP 주소를 보게된다.</li>\n</ul>\n<p>이외에 여러 시도가 있었으나 간단히 소개드리겠습니다.</p>\n<ul>\n<li>사이트에 접속할때 마다 로그인을 요구하고 식별정보를 Authorization 헤더에 담아 요청할 것\n<ul>\n<li>사이트를 옮겨다닐 때 마다 매번 로그인을 해야 한다.</li>\n</ul>\n</li>\n<li>뚱뚱한 URL\n<ul>\n<li>URL에 버전과 식별번호를 붙여 보내 식별하려 했다.\n<ul>\n<li>URL이 못생김, 공유하지 못하는 URL, 캐시 사용 불가, 서버 부하 가중, URL 이탈</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>배경에 대해 길게 이야기해봤습니다. 이제 이러한 문제를 해결하고 지금까지도 쓰고 있는 <code class=\"language-text\">쿠키</code>를 살펴보겠습니다.</p>\n<h2 id=\"쿠키\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4\" aria-label=\"쿠키 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키</h2>\n<p>쿠키는 클라이언트(브라우저)에 저장되는 작은 데이터 조각입니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/24623403/233010665-8e366b4f-7341-4eea-8bf2-53c91a180192.png\" alt=\"\"></p>\n<p>(크롬 개발자도구의 애플리케이션 탭에서 확인해볼 수 있습니다.)</p>\n<p>크롬의 경우 쿠키를 SQLite파일로 관리하고 있으며 Mac의 경우 <code class=\"language-text\">~/Library/Application Support/Google/Chrome/Default/Cookies</code>에서 확인해볼 수 있습니다.</p>\n<p>주요 필드의 의미는 다음과 같습니다.</p>\n<p><strong>creation_utc:</strong> 쿠키가 생성된 시점을 초 단위로 기술</p>\n<p><strong>host_key:</strong> 쿠키의 도메인</p>\n<p><strong>name:</strong> 쿠키의 이름</p>\n<p><strong>value:</strong> 쿠키의 값</p>\n<p><strong>path:</strong> 쿠키와 관련된 도메인에 있는 경로</p>\n<p><strong>expires_utc:</strong> 쿠키의 파기 시점을 초 단위로 기술</p>\n<p><strong>is_secure:</strong> 이 쿠키를 SSL 커넥션일 경우에만 보낼지 여부</p>\n<p>RFC 6265 표준 6.1에 따르면 브라우저의 저장 공간에 제한이 있겠으나 최소 다음은 만족해야 한다고 합니다.</p>\n<ul>\n<li>쿠키당 최소 4096Byte 이상(쿠키 이름, 값 및 속성의 길이 합계로 측정) 가능</li>\n<li>도메인당 최소 50개 이상의 쿠키 저장 가능</li>\n<li>총 3000개 최소 이상의 쿠키 저장 가능</li>\n</ul>\n<p>그러나 브라우저별로 구현사항이 미묘하게 다릅니다.</p>\n<h3 id=\"쿠키의-목적\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4%EC%9D%98-%EB%AA%A9%EC%A0%81\" aria-label=\"쿠키의 목적 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키의 목적</h3>\n<p>세션 관리(Session management)</p>\n<ul>\n<li>서버에 저장해야 할 로그인, 장바구니, 게임 스코어 등의 정보 관리</li>\n</ul>\n<p>개인화(Personalization)</p>\n<ul>\n<li>사용자 선호, 테마 등의 세팅</li>\n</ul>\n<p>트래킹(Tracking)</p>\n<ul>\n<li>사용자 행동을 기록하고 분석하는 용도</li>\n</ul>\n<p>과거에는 클라이언트 측에 정보를 저장할 떄 쿠키를 주로 사용하곤 했으나 웹 스토리지가 등장하고 점점 사용하지 않는 추세입니다.</p>\n<h3 id=\"쿠키의-타입\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4%EC%9D%98-%ED%83%80%EC%9E%85\" aria-label=\"쿠키의 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키의 타입</h3>\n<p>세션 쿠키(session cookie)와 지속 쿠키(persistent cookie) 두 가지 타입으로 나뉩니다.</p>\n<ul>\n<li><code class=\"language-text\">세션 쿠키</code>(session cookie)\n<ul>\n<li>사용자가 사이트를 탐색할 때, 관련한 설정과 선호 사항들을 저장하는 임시쿠키</li>\n<li>브라우저를 닫으면(세션이 종료되면) 삭제됨</li>\n</ul>\n</li>\n<li><code class=\"language-text\">지속 쿠키</code>(persistent cookie)\n<ul>\n<li>삭제되지 않고 더 길게 유지(세션이 종료되도 유지)</li>\n<li>디스크에 저장되어, 브라우저를 닫거나 컴퓨터를 재시작해도 남아있음</li>\n<li>주기적으로 방문하는 사이트 정보나 로그인 이름을 유지</li>\n</ul>\n</li>\n</ul>\n<p>둘의 다른 점은 <code class=\"language-text\">파기되는 시점</code>입니다. 파기되는 시점을 가리키는 Expires 혹은 Max-Age 파라미터가 없으면 세션쿠키입니다.</p>\n<h3 id=\"쿠키의-사용\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4%EC%9D%98-%EC%82%AC%EC%9A%A9\" aria-label=\"쿠키의 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키의 사용</h3>\n<p>클라이언트 요청에 대해 서버는 Response Header에 Set-Cookie 속성을 사용하여 클라이언트에 쿠키를 저장할 수 있습니다.</p>\n<table>\n<thead>\n<tr>\n<th>Set-Cookie 속성</th>\n<th>설명 및 용례</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name=value</td>\n<td>(필수) 큰 따옴표로 감싸지 않고 세미콜론, 쉼표, 등호, 공백을 포함하지 않는 문자열</td>\n</tr>\n<tr>\n<td>Expires</td>\n<td>(선택) 쿠키의 생명주기를 가리키는 날짜 문자열. 사용할 수 있는 타임존은 GMT. Expires가 없다면 세션쿠키</td>\n</tr>\n<tr>\n<td>Domain</td>\n<td>(선택) 이 속성에 기술된 도메인을 사용하는 서버로만 쿠키를 전송. 도메인 명시되어있지 않으면, Set-Cookie 응답을 생성한 서버의 호스트 명이 기본값으로 사용됨</td>\n</tr>\n<tr>\n<td>Path</td>\n<td>(선택) 서버에 있는 특정 경로만 쿠키를 할당. 경로가 명시되어있지 않으면, Set-Cookie 응답을 전달하는 URL의 경로가 사용됨</td>\n</tr>\n<tr>\n<td>Secure</td>\n<td>(선택) 이 속성이 포함되면, 쿠키는 HTTP가 SSL 보안 연결 사용할 때만 전달</td>\n</tr>\n</tbody>\n</table>\n<p>클라이언트가 서버에 요청을 보낼 때는 Domain, Path, Secure 필터들이 현재 요청하려는 사이트에 적합하면 파기되지 않은 쿠키들을 <code class=\"language-text\">자동</code>으로 보냅니다. 모든 쿠키는 Cookie 헤더에 세미콜론으로 구분하여 붙여 보냅니다.</p>\n<p><code class=\"language-text\">Cookie: session-id=002-123341-4444444; session-id-time=1007884800</code></p>\n<p>위의 사양은 **Version 0(넷스케이프)**이며 Version 1은 현재 널리 사용되고 있지는 않지만 Set-Cookie2, Cookie2헤더를 사용하며 복잡한 정의가 포함되어 있습니다. 이 글의 주제와는 벗어나는 것 같아 기회가 되면 다시 정리해보겠습니다.</p>\n<h3 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h3>\n<p>브라우저는 서버의 식별값을 쿠키에 저장하고 다시 요청을 보낼 때 자동으로 그 값을 보낸다.</p>\n<h3 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h3>\n<p>RFC 6265 표준 <a href=\"https://www.rfc-editor.org/rfc/rfc6265\">https://www.rfc-editor.org/rfc/rfc6265</a></p>\n<p>MDN Cookie: <a href=\"https://developer.mozilla.org/ko/docs/Web/HTTP/Cookies\">https://developer.mozilla.org/ko/docs/Web/HTTP/Cookies</a></p>\n<h2 id=\"세션\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EC%85%98\" aria-label=\"세션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세션</h2>\n<p>이쯤에서 하고싶은 말이 있는데, 세션이라는 단어가 너무 일반적으로 사용되는 단어라 혼용되기 쉬운 것 같습니다.</p>\n<ul>\n<li>HTTP session: HTTP 통신이 맺어지고 끝어지는 과정</li>\n<li>browser session: 브라우저가 사이트에 접속하고 탭이나 창을 닫기까지의 과정</li>\n<li>등등등 수많은 곳에서 세션이라는 단어가 사용될 수 있음..</li>\n</ul>\n<p>흔히들 쿠키와 세션을 비교하곤 하는데 여기서 말하는 세션이란 서버에서 클라언트 식별값을 관리하는 기법을 말합니다.</p>\n<p>쿠키를 통해 클라이언트 식별값을 저장하면 쿠키의 내용이 노출되는 보안 문제가 발생할 수 있습니다.(Cookie 헤더에 그 값이 담기기도 하고, 브라우저에 저장됨)</p>\n<p>따라서 클라이언트 식별값을 서버측에서 저장하고 있고 그것에 해당하는 id를 쿠키에 저장합니다. 이렇게 하면 다음 과정이 가능합니다.</p>\n<ol>\n<li>클라이언트 <strong>></strong> 서버 Request 요청(Session ID 미존재)</li>\n<li>서버 <strong>></strong> 클라이언트로 Session ID 쿠키 값 체크 후, 없을경우 새로 생성해서 응답</li>\n<li>클라이언트는 전달받은 Session ID 값을 매 요청마다 Header 쿠키에 담아서 전달</li>\n<li>서버는 Session ID로 사용자 식별</li>\n<li>클라이언트가 로그인 요청 시 서버에서는 session을 로그인한 사용자 정보로 갱신하고 새로운 Session ID를 발급하여 응답</li>\n<li>클라이언트가 이후에 사용자의 Session ID 쿠키를 요청과 함께 전달하고 서버에서도 해당 로그인 사용자로 식별</li>\n<li>클라이언트 종료(브라우저 종료) 시 Session ID 제거, 서버에서도 Session 제거</li>\n</ol>\n<h3 id=\"요약-1\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD-1\" aria-label=\"요약 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h3>\n<ul>\n<li>따라서 이는 쿠키와 동떨어진 개념이 아니며 쿠키를 보안 문제를 보완하기 위해 사용된 기법이라고 할 수 있습니다.</li>\n<li>쿠키의 내용을 서버에 저장하고 쿠키에는 그 id만 담아서 관리하는 것입니다.</li>\n</ul>\n<p>저는 이러한 기법을 단순 session이 아니라 Server Session이라고 부르고 싶습니다. 서버측에서 session을 관리해주고 있기 때문이죠.</p>\n<p>추가로 서버 세션은 값을 저장하고 유지하고 있어야 하기 때문에 서버가 상태를 가지게 됩니다. 보통 캐시에 저장하기 떄문에 서버가 재실행하면 클라이언트를 식별하던 값이 모두 삭제될 수 있습니다. 이러한 문제를 해결하고자 JWT가 등장하였습니다.(추후 작성해보려 합니다)</p>\n<h3 id=\"참고자료-1\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C-1\" aria-label=\"참고자료 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h3>\n<p>MDN-HTTP 세션: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Session\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Session</a></p>","excerpt":"쿠키와 세션.. (세션?) 상태: Not started\n생성일: 2023년 4월 19일 오전 11:25 쿠키와 세션 자주 들었는데 이번 기회로 명확히 알아봅시다. 먼저 이 기술이 등장한 배경을 이해해야 합니다. HTTP 프로토콜은 stateless(무상태), connectionless(비연결지향) 특성을 가지고 있기 떄문에 클라이언트의 요청에 대해 어떤 클라이언트인지 식별할 수 없습니다. Stateless: 커넥션이 종료되는 순간 상태정보를 유지하지 않는 특성 Connectionless: 클라이언트가 요청을 보내고 서버의 응답을 주면 연결을 끊는다. 초기에는 클라이언트의 IP 주소를 이용하여 식별하려 했으나 몇개의 문제점이 존재했습니다. 여러 사용자가 한 대의 컴퓨터를 사용한다면 하나의 IP로 어떤 사용자인지 식별할 수 없다. 인터넷 서비스 제공자(ISP)는 사용자가 로그인하면 동적으로 IP 주소를 할당한다. 매번 다른 주소를 받으므로 식별할 수 없다. 네트워크 주소 변환(Netw…","frontmatter":{"date":"2023-04-19","title":"쿠키와 세션.. (세션?)","categories":"네트워크","author":"sjsjsj1246","emoji":"🍪"},"fields":{"slug":"/network/cookie_session/"}},"next":{"id":"848b3baa-7109-5fe6-8edc-8ed83a616c56","html":"<h2 id=\"프로젝트-설계\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EA%B3%84\" aria-label=\"프로젝트 설계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 설계</h2>\n<p>스프링에 관심이 좀 있었는데 토이 프로젝트를 하면서 사용해 보기로 했습니다.</p>\n<h3 id=\"기능\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%8A%A5\" aria-label=\"기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기능</h3>\n<table>\n<thead>\n<tr>\n<th>종류</th>\n<th>도메인</th>\n<th>uri</th>\n<th>method</th>\n<th>body</th>\n<th>response</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>투두목록 조회</td>\n<td>Todo</td>\n<td>/todo</td>\n<td>GET</td>\n<td>{tags:Tag[], start:Date, end:Date}</td>\n<td>Todo[]</td>\n</tr>\n<tr>\n<td>투두 추가</td>\n<td>Todo</td>\n<td>/todo</td>\n<td>POST</td>\n<td>Todo</td>\n<td>Todo</td>\n</tr>\n<tr>\n<td>투두 수정</td>\n<td>Todo</td>\n<td>/todo/:id</td>\n<td>PATCH</td>\n<td>Todo</td>\n<td>Todo</td>\n</tr>\n<tr>\n<td>투두 토글</td>\n<td>Todo</td>\n<td>/todo/toggle:id</td>\n<td>PATCH</td>\n<td>null</td>\n<td>Todo</td>\n</tr>\n<tr>\n<td>투두 삭제</td>\n<td>Todo</td>\n<td>/todo/:id</td>\n<td>DELETE</td>\n<td>null</td>\n<td>null</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Todo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  content<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  modifiedDate<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n  isConplete<span class=\"token operator\">:</span> Boolean<span class=\"token punctuation\">;</span>\n  tag<span class=\"token operator\">:</span> Tag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Tag</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"global\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"design\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"fe\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"be\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"mobile\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"프로젝트-구조\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%A1%B0\" aria-label=\"프로젝트 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 구조</h3>\n<p>Spring boot 사용, version 2.7.5\njpa, db는 mysql 8버전 사용</p>\n<h4 id=\"종속성\" style=\"position:relative;\"><a href=\"#%EC%A2%85%EC%86%8D%EC%84%B1\" aria-label=\"종속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>종속성</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dependencies {\n    compileOnly 'org.projectlombok:lombok'\n    annotationProcessor 'org.projectlombok:lombok'\n    testImplementation 'org.springframework.boot:spring-boot-starter-test'\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    implementation 'org.springframework.boot:spring-boot-starter-validation'\n    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n    implementation 'mysql:mysql-connector-java'\n}</code></pre></div>\n<h4 id=\"applicationproperties\" style=\"position:relative;\"><a href=\"#applicationproperties\" aria-label=\"applicationproperties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>application.properties</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//DB 설정\nspring.datasource.url={jdbc:mysql로 시작하는 디비주소}\nspring.datasource.username={유저}\nspring.datasource.password={패스워드}\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n\n//JPA 설정\nspring.jpa.show-sql=true\nspring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect //MySQL 8버전 사용함\nspring.jpa.database=mysql\nspring.jpa.hibernate.ddl-auto=update\nspring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy\nspring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl\nspring.jpa.generate-ddl=false\nspring.jpa.properties.hibernate.format_sql=true\nspring.jpa.properties.hibernate.enable_lazy_load_no_trans=true</code></pre></div>\n<h2 id=\"개발\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C\" aria-label=\"개발 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발</h2>\n<h3 id=\"domain-정의\" style=\"position:relative;\"><a href=\"#domain-%EC%A0%95%EC%9D%98\" aria-label=\"domain 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Domain 정의</h3>\n<p>인증도 없는 간단한 투두리스트 프로젝트이기 때문에 도메인은 Todo 하나 뿐입니다.</p>\n<p>먼저 Entity를 작성해주었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@Setter</span>\n<span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Todo</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token comment\">//PK를 지정해주었습니다.</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span><span class=\"token punctuation\">(</span>strategy <span class=\"token operator\">=</span> <span class=\"token class-name\">GenerationType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IDENTITY</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//기본키 생성 전략을 MySQL에 맡깁니다. AUTO_INCREMENT로 생성될 것입니다.</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> content<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Boolean</span> isComplete<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Enumerated</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnumType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">STRING</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TagEnum</span> tag<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDate</span> modifiedDate<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Todo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Todo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> content<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TagEnum</span> tag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> content<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tag <span class=\"token operator\">=</span> tag<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isComplete <span class=\"token operator\">=</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FALSE</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modifiedDate <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">TagEnum</span> <span class=\"token punctuation\">{</span>\n        global<span class=\"token punctuation\">,</span> pm<span class=\"token punctuation\">,</span> design<span class=\"token punctuation\">,</span> fe<span class=\"token punctuation\">,</span> be<span class=\"token punctuation\">,</span> mobile\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"repository\" style=\"position:relative;\"><a href=\"#repository\" aria-label=\"repository permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repository</h3>\n<p>JPA의 repository를 정의해줍니다. 날짜를 통해 투두를 찾는 내부 메서드를 추가로 정의해주었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TodoRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JpaRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Todo</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Todo</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAllByModifiedDateBetween</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDate</span> start<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LocalDate</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"controller\" style=\"position:relative;\"><a href=\"#controller\" aria-label=\"controller permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Controller</h3>\n<p>/todo에 6개의 endpoint를 정의해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/todo\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@RequiredArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">TodoService</span> todoService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodoListResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getTodoList</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span><span class=\"token punctuation\">(</span>required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">TodoListRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span>todoService<span class=\"token punctuation\">.</span><span class=\"token function\">getTodoList</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PostMapping</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">createTodoList</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">TodoPatchRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CREATED</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span>todoService<span class=\"token punctuation\">.</span><span class=\"token function\">createTodo</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getTodo</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token annotation punctuation\">@Valid</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span>todoService<span class=\"token punctuation\">.</span><span class=\"token function\">getTodo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PatchMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">updateTodo</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token annotation punctuation\">@Valid</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">TodoPatchRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span>todoService<span class=\"token punctuation\">.</span><span class=\"token function\">updateTodo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@DeleteMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">deleteTodo</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token annotation punctuation\">@Valid</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        todoService<span class=\"token punctuation\">.</span><span class=\"token function\">deleteTodo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PatchMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/toggle/{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">toggleTodo</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token annotation punctuation\">@Valid</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span>todoService<span class=\"token punctuation\">.</span><span class=\"token function\">toggleTodo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"dto\" style=\"position:relative;\"><a href=\"#dto\" aria-label=\"dto permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DTO</h4>\n<p>DTO들을 정의해주었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoDto</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> content<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Boolean</span> isComplete<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Todo<span class=\"token punctuation\">.</span>TagEnum</span> tag<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDate</span> modifiedDate<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// TodoDTO.from을 통해 todo를 쉽게 todoDTO로 바꿀 수 있습니다.</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">TodoDto</span> <span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Todo</span> todo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">(</span>\n                todo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                todo<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                todo<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                todo<span class=\"token punctuation\">.</span><span class=\"token function\">getIsComplete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                todo<span class=\"token punctuation\">.</span><span class=\"token function\">getTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                todo<span class=\"token punctuation\">.</span><span class=\"token function\">getModifiedDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoListResponse</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">></span></span> todoList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">TodoListResponse</span> <span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">></span></span> todoList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TodoListResponse</span><span class=\"token punctuation\">(</span>todoList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> todoList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoPatchRequest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@NotNull</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> content<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Todo<span class=\"token punctuation\">.</span>TagEnum</span> tag<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Todo</span> <span class=\"token function\">toEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Todo</span> todo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Todo</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">,</span> tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> todo<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoListRequest</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Todo<span class=\"token punctuation\">.</span>TagEnum</span><span class=\"token punctuation\">></span></span> tags<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDate</span> start<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDate</span> end<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h3 id=\"service\" style=\"position:relative;\"><a href=\"#service\" aria-label=\"service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Service</h3>\n<p>서비스 코드들입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequiredArgsConstructor</span>\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">TodoRepository</span> todoRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TodoListResponse</span> <span class=\"token function\">getTodoList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TodoListRequest</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Todo</span><span class=\"token punctuation\">></span></span> todoList<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>request <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token class-name\">TodoListResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TodoDto</span><span class=\"token operator\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            todoList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllByModifiedDateBetween</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            todoList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//태그 검사</span>\n        todoList <span class=\"token operator\">=</span>  todoList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>todo <span class=\"token operator\">-></span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getTags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span><span class=\"token function\">getTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">TodoListResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>todoList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TodoDto</span><span class=\"token operator\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TodoDto</span> <span class=\"token function\">createTodo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TodoPatchRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>todoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">toEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TodoDto</span> <span class=\"token function\">getTodo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>todoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElseThrow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NotExistTodoException</span><span class=\"token operator\">::</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TodoDto</span> <span class=\"token function\">updateTodo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TodoPatchRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Todo</span> todo <span class=\"token operator\">=</span> todoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElseThrow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NotExistTodoException</span><span class=\"token operator\">::</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        todo<span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        todo<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        todo<span class=\"token punctuation\">.</span><span class=\"token function\">setTag</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>todoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteTodo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        todoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Transactional</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TodoDto</span> <span class=\"token function\">toggleTodo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Todo</span> todo <span class=\"token operator\">=</span> todoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElseThrow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NotExistTodoException</span><span class=\"token operator\">::</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        todo<span class=\"token punctuation\">.</span><span class=\"token function\">setIsComplete</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>todo<span class=\"token punctuation\">.</span><span class=\"token function\">getIsComplete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">TodoDto</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"배포\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%ED%8F%AC\" aria-label=\"배포 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배포</h2>\n<p>우분투에 jdk, mysql, nginx를 설치해줍니다.</p>\n<h3 id=\"nginx-설정\" style=\"position:relative;\"><a href=\"#nginx-%EC%84%A4%EC%A0%95\" aria-label=\"nginx 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nginx 설정</h3>\n<p>저는 도메인을 가지고 있어서 여기로 연결하고자 했습니다.\nA레코드로 todo.도메인.xx을 서버 주소로 매핑시켰습니다.</p>\n<p>여기서 그치면 안되고 이 도메인으로 접속한 유저를 서버 내의 스프링 애플리케이션으로 포팅해줘야 합니다.</p>\n<p>/etc/nginx/sites-available/todo.도메인.xx</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">server {\n listen 80;\n server_name todo.도메인.xx;\n\n location / {\n  proxy_pass http://127.0.0.1:8080/;\n  proxy_redirect off;\n  proxy_set_header X-Forwarded-Host $host;\n  proxy_set_header Host \"todo.도메인.xx\";\n  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n  proxy_set_header X-Real-IP $remote_addr;\n }\n}\n</code></pre></div>\n<p>그후 소프트링크 연결\nsudo ln -s /etc/nginx/sites-available/todo.도메인.xx /etc/nginx/sites-enabled/todo.도메인.xx</p>\n<p>sertbot으로 https 인증서 등록</p>\n<blockquote>\n<p>참고 <a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-20-04\">https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-20-04</a></p>\n</blockquote>\n<h3 id=\"빌드-및-실행\" style=\"position:relative;\"><a href=\"#%EB%B9%8C%EB%93%9C-%EB%B0%8F-%EC%8B%A4%ED%96%89\" aria-label=\"빌드 및 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빌드 및 실행</h3>\n<p>프로젝트 루트에서</p>\n<ol>\n<li>./gradlew build</li>\n<li>nohup java -jar build/libs/빌드된_파일_이름.jar &#x26;</li>\n</ol>\n<p>백그라운드로 스프링 부트 애플리케이션이 동작하게 됩니다.</p>\n<p>프로세스를 종료하고싶다면</p>\n<ol>\n<li>ps -ef | grep 빌드파일이름\n<ol>\n<li>이 명령어로 pid를 찾습니다.</li>\n</ol>\n</li>\n<li>kill -9 {pid}</li>\n</ol>\n<hr>\n<p>얕은 지식으로 스프링 부트를 경험해보고 배포도 해봤습니다.\n자세한 설명이 필요하신 부분 있다면 댓글 달아주세요</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EA%B3%84\">프로젝트 설계</a></p>\n<ul>\n<li>\n<p><a href=\"#%EA%B8%B0%EB%8A%A5\">기능</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%A1%B0\">프로젝트 구조</a></p>\n<ul>\n<li><a href=\"#%EC%A2%85%EC%86%8D%EC%84%B1\">종속성</a></li>\n<li><a href=\"#applicationproperties\">application.properties</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%9C%EB%B0%9C\">개발</a></p>\n<ul>\n<li>\n<p><a href=\"#domain-%EC%A0%95%EC%9D%98\">Domain 정의</a></p>\n</li>\n<li>\n<p><a href=\"#repository\">Repository</a></p>\n</li>\n<li>\n<p><a href=\"#controller\">Controller</a></p>\n<ul>\n<li><a href=\"#dto\">DTO</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#service\">Service</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B0%B0%ED%8F%AC\">배포</a></p>\n<ul>\n<li><a href=\"#nginx-%EC%84%A4%EC%A0%95\">Nginx 설정</a></li>\n<li><a href=\"#%EB%B9%8C%EB%93%9C-%EB%B0%8F-%EC%8B%A4%ED%96%89\">빌드 및 실행</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"2022-11-8","title":"Spring Boot 배포 일지 (Feat. TodoList 프로젝트)","categories":"블로그","author":"sjsjsj1246","emoji":"🍃"},"fields":{"slug":"/spring-boot-todolist/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://hislogs.com","comments":{"utterances":{"repo":"sjsjsj1246/hislogs"}}}}},"pageContext":{"slug":"/network/cookie_session/","nextSlug":"/spring-boot-todolist/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}